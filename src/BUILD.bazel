load("@makeheaders//src:RULES.bzl", "makeheaders")

# dune:read produces an alist. corrects the following reader errors in
# dune files: bad dot e.g. (run %{exe:test_clic.exe} .); end-of-line
# string literals e.g. "\| this is a string

load("//config/cc:CONFIG.bzl",
     "BASE_SRCS", "BASE_DEPS",
     "BASE_COPTS", "BASE_INCLUDE_PATHS",
     "BASE_DEFINES", "BASE_LINKOPTS")

SRCS = []
DEPS = BASE_DEPS + ["@uthash//src:uthash"]
INCLUDE_PATHS = BASE_INCLUDE_PATHS + ["-I$(@uthash)/src"]
COPTS         = BASE_COPTS + INCLUDE_PATHS
DEFINES       = BASE_DEFINES
LINKOPTS      = BASE_LINKOPTS

TOOLCHAINS = ["//:repo_paths"]

exports_files(["trace_dev.h"]) # for testing

##########
cc_library(
    name  = "dune_s7",
    linkstatic = True,
    alwayslink = True,
    srcs = SRCS + [
        "dune_s7.c",
        ":mkhdrs", # "dune_s7.h",
        # "error_handler_dune.c",
        # "error_handler_dune.h"
    ],
    deps = DEPS,
    copts = COPTS + [
        "-I$(GENDIR)/$(@)/src"
    ],
    defines = DEFINES,
    toolchains = TOOLCHAINS,
    visibility = ["//visibility:public"]
)

################################################################
makeheaders(
    name             = "mkhdrs",
    hdrs_srcs        = ["dune_s7.c"],
    additional_srcs  = select({
        "//config/profile:dev?": [
            ":ansi_colors.h",
            ":trace_dev.h"
        ],
        "//conditions:default": [
            ":trace_prod.h"
        ]
    })
)

makeheaders(
    name             = "export_hdr",
    out              = "dune_s7.h",
    export_interface = True,
    hdrs_srcs        = [
        "dune_s7.c",
        ":trace_prod.h"
    ],
    # additional_srcs  = select({
    #     "//config/profile:dev?": [
    #         ":ansi_colors.h",
    #         ":trace_dev.h"
    #     ],
    #     "//conditions:default": [
    #         ":trace_prod.h"
    #     ]
    # })
)
